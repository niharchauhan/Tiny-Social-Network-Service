// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: synchronizer.proto

#include "synchronizer.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace csce438 {
template <typename>
PROTOBUF_CONSTEXPR GetAllUsersRequest::GetAllUsersRequest(
    ::_pbi::ConstantInitialized) {}
struct GetAllUsersRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetAllUsersRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetAllUsersRequestDefaultTypeInternal() {}
  union {
    GetAllUsersRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetAllUsersRequestDefaultTypeInternal _GetAllUsersRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR AllUsers::AllUsers(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.allusers_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AllUsersDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AllUsersDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AllUsersDefaultTypeInternal() {}
  union {
    AllUsers _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AllUsersDefaultTypeInternal _AllUsers_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR GetFLRequest::GetFLRequest(
    ::_pbi::ConstantInitialized) {}
struct GetFLRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetFLRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetFLRequestDefaultTypeInternal() {}
  union {
    GetFLRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetFLRequestDefaultTypeInternal _GetFLRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR GetFLResponse::GetFLResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.lines_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetFLResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetFLResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetFLResponseDefaultTypeInternal() {}
  union {
    GetFLResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetFLResponseDefaultTypeInternal _GetFLResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR GetTLRequest::GetTLRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.uid_)*/ 0

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetTLRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetTLRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetTLRequestDefaultTypeInternal() {}
  union {
    GetTLRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetTLRequestDefaultTypeInternal _GetTLRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR GetTLResponse::GetTLResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.lines_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetTLResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetTLResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetTLResponseDefaultTypeInternal() {}
  union {
    GetTLResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetTLResponseDefaultTypeInternal _GetTLResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR ResynchServerRequest::ResynchServerRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.serverid_)*/ 0

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ResynchServerRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResynchServerRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResynchServerRequestDefaultTypeInternal() {}
  union {
    ResynchServerRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResynchServerRequestDefaultTypeInternal _ResynchServerRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR ResynchServerResponse::ResynchServerResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.status_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ResynchServerResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResynchServerResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResynchServerResponseDefaultTypeInternal() {}
  union {
    ResynchServerResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResynchServerResponseDefaultTypeInternal _ResynchServerResponse_default_instance_;
}  // namespace csce438
static ::_pb::Metadata file_level_metadata_synchronizer_2eproto[8];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_synchronizer_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_synchronizer_2eproto = nullptr;
const ::uint32_t TableStruct_synchronizer_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csce438::GetAllUsersRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csce438::AllUsers, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csce438::AllUsers, _impl_.allusers_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csce438::GetFLRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csce438::GetFLResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csce438::GetFLResponse, _impl_.lines_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csce438::GetTLRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csce438::GetTLRequest, _impl_.uid_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csce438::GetTLResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csce438::GetTLResponse, _impl_.lines_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csce438::ResynchServerRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csce438::ResynchServerRequest, _impl_.serverid_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::csce438::ResynchServerResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::csce438::ResynchServerResponse, _impl_.status_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, -1, -1, sizeof(::csce438::GetAllUsersRequest)},
        { 8, -1, -1, sizeof(::csce438::AllUsers)},
        { 17, -1, -1, sizeof(::csce438::GetFLRequest)},
        { 25, -1, -1, sizeof(::csce438::GetFLResponse)},
        { 34, -1, -1, sizeof(::csce438::GetTLRequest)},
        { 43, -1, -1, sizeof(::csce438::GetTLResponse)},
        { 52, -1, -1, sizeof(::csce438::ResynchServerRequest)},
        { 61, -1, -1, sizeof(::csce438::ResynchServerResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::csce438::_GetAllUsersRequest_default_instance_._instance,
    &::csce438::_AllUsers_default_instance_._instance,
    &::csce438::_GetFLRequest_default_instance_._instance,
    &::csce438::_GetFLResponse_default_instance_._instance,
    &::csce438::_GetTLRequest_default_instance_._instance,
    &::csce438::_GetTLResponse_default_instance_._instance,
    &::csce438::_ResynchServerRequest_default_instance_._instance,
    &::csce438::_ResynchServerResponse_default_instance_._instance,
};
const char descriptor_table_protodef_synchronizer_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\022synchronizer.proto\022\007csce438\"\024\n\022GetAllU"
    "sersRequest\"\034\n\010AllUsers\022\020\n\010allUsers\030\001 \003("
    "\t\"\016\n\014GetFLRequest\"\036\n\rGetFLResponse\022\r\n\005li"
    "nes\030\001 \003(\t\"\033\n\014GetTLRequest\022\013\n\003uid\030\001 \001(\005\"\036"
    "\n\rGetTLResponse\022\r\n\005lines\030\001 \003(\t\"(\n\024Resync"
    "hServerRequest\022\020\n\010serverID\030\001 \001(\005\"\'\n\025Resy"
    "nchServerResponse\022\016\n\006Status\030\001 \001(\t2\225\002\n\014Sy"
    "nchService\022\?\n\013GetAllUsers\022\033.csce438.GetA"
    "llUsersRequest\032\021.csce438.AllUsers\"\000\0228\n\005G"
    "etFL\022\025.csce438.GetFLRequest\032\026.csce438.Ge"
    "tFLResponse\"\000\0228\n\005GetTL\022\025.csce438.GetTLRe"
    "quest\032\026.csce438.GetTLResponse\"\000\022P\n\rResyn"
    "chServer\022\035.csce438.ResynchServerRequest\032"
    "\036.csce438.ResynchServerResponse\"\000b\006proto"
    "3"
};
static ::absl::once_flag descriptor_table_synchronizer_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_synchronizer_2eproto = {
    false,
    false,
    561,
    descriptor_table_protodef_synchronizer_2eproto,
    "synchronizer.proto",
    &descriptor_table_synchronizer_2eproto_once,
    nullptr,
    0,
    8,
    schemas,
    file_default_instances,
    TableStruct_synchronizer_2eproto::offsets,
    file_level_metadata_synchronizer_2eproto,
    file_level_enum_descriptors_synchronizer_2eproto,
    file_level_service_descriptors_synchronizer_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_synchronizer_2eproto_getter() {
  return &descriptor_table_synchronizer_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_synchronizer_2eproto(&descriptor_table_synchronizer_2eproto);
namespace csce438 {
// ===================================================================

class GetAllUsersRequest::_Internal {
 public:
};

GetAllUsersRequest::GetAllUsersRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:csce438.GetAllUsersRequest)
}
GetAllUsersRequest::GetAllUsersRequest(const GetAllUsersRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  GetAllUsersRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:csce438.GetAllUsersRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetAllUsersRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetAllUsersRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetAllUsersRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_synchronizer_2eproto_getter, &descriptor_table_synchronizer_2eproto_once,
      file_level_metadata_synchronizer_2eproto[0]);
}
// ===================================================================

class AllUsers::_Internal {
 public:
};

AllUsers::AllUsers(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csce438.AllUsers)
}
AllUsers::AllUsers(const AllUsers& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AllUsers* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.allusers_){from._impl_.allusers_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:csce438.AllUsers)
}

inline void AllUsers::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.allusers_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

AllUsers::~AllUsers() {
  // @@protoc_insertion_point(destructor:csce438.AllUsers)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AllUsers::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_allusers()->~RepeatedPtrField();
}

void AllUsers::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AllUsers::Clear() {
// @@protoc_insertion_point(message_clear_start:csce438.AllUsers)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_allusers()->Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AllUsers::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string allUsers = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_allusers();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "csce438.AllUsers.allUsers"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* AllUsers::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csce438.AllUsers)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string allUsers = 1;
  for (int i = 0, n = this->_internal_allusers_size(); i < n; ++i) {
    const auto& s = this->_internal_allusers(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "csce438.AllUsers.allUsers");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csce438.AllUsers)
  return target;
}

::size_t AllUsers::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csce438.AllUsers)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string allUsers = 1;
  total_size += 1 * ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_internal_allusers().size());
  for (int i = 0, n = _internal_allusers().size(); i < n; ++i) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        _internal_allusers().Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AllUsers::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AllUsers::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AllUsers::GetClassData() const { return &_class_data_; }


void AllUsers::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AllUsers*>(&to_msg);
  auto& from = static_cast<const AllUsers&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csce438.AllUsers)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_allusers()->MergeFrom(from._internal_allusers());
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AllUsers::CopyFrom(const AllUsers& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csce438.AllUsers)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllUsers::IsInitialized() const {
  return true;
}

void AllUsers::InternalSwap(AllUsers* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_allusers()->InternalSwap(
      other->_internal_mutable_allusers());
}

::PROTOBUF_NAMESPACE_ID::Metadata AllUsers::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_synchronizer_2eproto_getter, &descriptor_table_synchronizer_2eproto_once,
      file_level_metadata_synchronizer_2eproto[1]);
}
// ===================================================================

class GetFLRequest::_Internal {
 public:
};

GetFLRequest::GetFLRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:csce438.GetFLRequest)
}
GetFLRequest::GetFLRequest(const GetFLRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  GetFLRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:csce438.GetFLRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetFLRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetFLRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetFLRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_synchronizer_2eproto_getter, &descriptor_table_synchronizer_2eproto_once,
      file_level_metadata_synchronizer_2eproto[2]);
}
// ===================================================================

class GetFLResponse::_Internal {
 public:
};

GetFLResponse::GetFLResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csce438.GetFLResponse)
}
GetFLResponse::GetFLResponse(const GetFLResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetFLResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.lines_){from._impl_.lines_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:csce438.GetFLResponse)
}

inline void GetFLResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.lines_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetFLResponse::~GetFLResponse() {
  // @@protoc_insertion_point(destructor:csce438.GetFLResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetFLResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_lines()->~RepeatedPtrField();
}

void GetFLResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetFLResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:csce438.GetFLResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_lines()->Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetFLResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string lines = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_lines();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "csce438.GetFLResponse.lines"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* GetFLResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csce438.GetFLResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string lines = 1;
  for (int i = 0, n = this->_internal_lines_size(); i < n; ++i) {
    const auto& s = this->_internal_lines(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "csce438.GetFLResponse.lines");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csce438.GetFLResponse)
  return target;
}

::size_t GetFLResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csce438.GetFLResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string lines = 1;
  total_size += 1 * ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_internal_lines().size());
  for (int i = 0, n = _internal_lines().size(); i < n; ++i) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        _internal_lines().Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetFLResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetFLResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetFLResponse::GetClassData() const { return &_class_data_; }


void GetFLResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetFLResponse*>(&to_msg);
  auto& from = static_cast<const GetFLResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csce438.GetFLResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_lines()->MergeFrom(from._internal_lines());
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetFLResponse::CopyFrom(const GetFLResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csce438.GetFLResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFLResponse::IsInitialized() const {
  return true;
}

void GetFLResponse::InternalSwap(GetFLResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_lines()->InternalSwap(
      other->_internal_mutable_lines());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetFLResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_synchronizer_2eproto_getter, &descriptor_table_synchronizer_2eproto_once,
      file_level_metadata_synchronizer_2eproto[3]);
}
// ===================================================================

class GetTLRequest::_Internal {
 public:
};

GetTLRequest::GetTLRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csce438.GetTLRequest)
}
GetTLRequest::GetTLRequest(const GetTLRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:csce438.GetTLRequest)
}

inline void GetTLRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.uid_) { 0 }

    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetTLRequest::~GetTLRequest() {
  // @@protoc_insertion_point(destructor:csce438.GetTLRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetTLRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetTLRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetTLRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:csce438.GetTLRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.uid_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetTLRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.uid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* GetTLRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csce438.GetTLRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 uid = 1;
  if (this->_internal_uid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        1, this->_internal_uid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csce438.GetTLRequest)
  return target;
}

::size_t GetTLRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csce438.GetTLRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 uid = 1;
  if (this->_internal_uid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_uid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetTLRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetTLRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetTLRequest::GetClassData() const { return &_class_data_; }


void GetTLRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetTLRequest*>(&to_msg);
  auto& from = static_cast<const GetTLRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csce438.GetTLRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_uid() != 0) {
    _this->_internal_set_uid(from._internal_uid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetTLRequest::CopyFrom(const GetTLRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csce438.GetTLRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTLRequest::IsInitialized() const {
  return true;
}

void GetTLRequest::InternalSwap(GetTLRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);

  swap(_impl_.uid_, other->_impl_.uid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetTLRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_synchronizer_2eproto_getter, &descriptor_table_synchronizer_2eproto_once,
      file_level_metadata_synchronizer_2eproto[4]);
}
// ===================================================================

class GetTLResponse::_Internal {
 public:
};

GetTLResponse::GetTLResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csce438.GetTLResponse)
}
GetTLResponse::GetTLResponse(const GetTLResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetTLResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.lines_){from._impl_.lines_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:csce438.GetTLResponse)
}

inline void GetTLResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.lines_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetTLResponse::~GetTLResponse() {
  // @@protoc_insertion_point(destructor:csce438.GetTLResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetTLResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_lines()->~RepeatedPtrField();
}

void GetTLResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetTLResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:csce438.GetTLResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_lines()->Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetTLResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string lines = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_lines();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "csce438.GetTLResponse.lines"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* GetTLResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csce438.GetTLResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string lines = 1;
  for (int i = 0, n = this->_internal_lines_size(); i < n; ++i) {
    const auto& s = this->_internal_lines(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "csce438.GetTLResponse.lines");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csce438.GetTLResponse)
  return target;
}

::size_t GetTLResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csce438.GetTLResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string lines = 1;
  total_size += 1 * ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_internal_lines().size());
  for (int i = 0, n = _internal_lines().size(); i < n; ++i) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        _internal_lines().Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetTLResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetTLResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetTLResponse::GetClassData() const { return &_class_data_; }


void GetTLResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetTLResponse*>(&to_msg);
  auto& from = static_cast<const GetTLResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csce438.GetTLResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_lines()->MergeFrom(from._internal_lines());
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetTLResponse::CopyFrom(const GetTLResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csce438.GetTLResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTLResponse::IsInitialized() const {
  return true;
}

void GetTLResponse::InternalSwap(GetTLResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_lines()->InternalSwap(
      other->_internal_mutable_lines());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetTLResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_synchronizer_2eproto_getter, &descriptor_table_synchronizer_2eproto_once,
      file_level_metadata_synchronizer_2eproto[5]);
}
// ===================================================================

class ResynchServerRequest::_Internal {
 public:
};

ResynchServerRequest::ResynchServerRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csce438.ResynchServerRequest)
}
ResynchServerRequest::ResynchServerRequest(const ResynchServerRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:csce438.ResynchServerRequest)
}

inline void ResynchServerRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.serverid_) { 0 }

    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ResynchServerRequest::~ResynchServerRequest() {
  // @@protoc_insertion_point(destructor:csce438.ResynchServerRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ResynchServerRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}

void ResynchServerRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ResynchServerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:csce438.ResynchServerRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.serverid_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResynchServerRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 serverID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.serverid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* ResynchServerRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csce438.ResynchServerRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 serverID = 1;
  if (this->_internal_serverid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        1, this->_internal_serverid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csce438.ResynchServerRequest)
  return target;
}

::size_t ResynchServerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csce438.ResynchServerRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 serverID = 1;
  if (this->_internal_serverid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_serverid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResynchServerRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ResynchServerRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResynchServerRequest::GetClassData() const { return &_class_data_; }


void ResynchServerRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ResynchServerRequest*>(&to_msg);
  auto& from = static_cast<const ResynchServerRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csce438.ResynchServerRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_serverid() != 0) {
    _this->_internal_set_serverid(from._internal_serverid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResynchServerRequest::CopyFrom(const ResynchServerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csce438.ResynchServerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResynchServerRequest::IsInitialized() const {
  return true;
}

void ResynchServerRequest::InternalSwap(ResynchServerRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);

  swap(_impl_.serverid_, other->_impl_.serverid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResynchServerRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_synchronizer_2eproto_getter, &descriptor_table_synchronizer_2eproto_once,
      file_level_metadata_synchronizer_2eproto[6]);
}
// ===================================================================

class ResynchServerResponse::_Internal {
 public:
};

ResynchServerResponse::ResynchServerResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:csce438.ResynchServerResponse)
}
ResynchServerResponse::ResynchServerResponse(const ResynchServerResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ResynchServerResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.status_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.status_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.status_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_status().empty()) {
    _this->_impl_.status_.Set(from._internal_status(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:csce438.ResynchServerResponse)
}

inline void ResynchServerResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.status_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.status_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.status_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ResynchServerResponse::~ResynchServerResponse() {
  // @@protoc_insertion_point(destructor:csce438.ResynchServerResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ResynchServerResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.status_.Destroy();
}

void ResynchServerResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ResynchServerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:csce438.ResynchServerResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.status_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResynchServerResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string Status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_status();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "csce438.ResynchServerResponse.Status"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* ResynchServerResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csce438.ResynchServerResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string Status = 1;
  if (!this->_internal_status().empty()) {
    const std::string& _s = this->_internal_status();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "csce438.ResynchServerResponse.Status");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csce438.ResynchServerResponse)
  return target;
}

::size_t ResynchServerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csce438.ResynchServerResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Status = 1;
  if (!this->_internal_status().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResynchServerResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ResynchServerResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResynchServerResponse::GetClassData() const { return &_class_data_; }


void ResynchServerResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ResynchServerResponse*>(&to_msg);
  auto& from = static_cast<const ResynchServerResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:csce438.ResynchServerResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_status().empty()) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResynchServerResponse::CopyFrom(const ResynchServerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csce438.ResynchServerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResynchServerResponse::IsInitialized() const {
  return true;
}

void ResynchServerResponse::InternalSwap(ResynchServerResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.status_, lhs_arena,
                                       &other->_impl_.status_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResynchServerResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_synchronizer_2eproto_getter, &descriptor_table_synchronizer_2eproto_once,
      file_level_metadata_synchronizer_2eproto[7]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace csce438
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::csce438::GetAllUsersRequest*
Arena::CreateMaybeMessage< ::csce438::GetAllUsersRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::csce438::GetAllUsersRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::csce438::AllUsers*
Arena::CreateMaybeMessage< ::csce438::AllUsers >(Arena* arena) {
  return Arena::CreateMessageInternal< ::csce438::AllUsers >(arena);
}
template<> PROTOBUF_NOINLINE ::csce438::GetFLRequest*
Arena::CreateMaybeMessage< ::csce438::GetFLRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::csce438::GetFLRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::csce438::GetFLResponse*
Arena::CreateMaybeMessage< ::csce438::GetFLResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::csce438::GetFLResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::csce438::GetTLRequest*
Arena::CreateMaybeMessage< ::csce438::GetTLRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::csce438::GetTLRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::csce438::GetTLResponse*
Arena::CreateMaybeMessage< ::csce438::GetTLResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::csce438::GetTLResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::csce438::ResynchServerRequest*
Arena::CreateMaybeMessage< ::csce438::ResynchServerRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::csce438::ResynchServerRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::csce438::ResynchServerResponse*
Arena::CreateMaybeMessage< ::csce438::ResynchServerResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::csce438::ResynchServerResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
